import React, { useEffect, useState } from 'react';
import { View, Text, Image, StyleSheet, Dimensions } from 'react-native';
import BookFallbackCover from './BookFallbackCover';

const { width: fixwidth } = Dimensions.get('window');

const BookInfoHeaderBlock = ({ bookInfo }) => {
  const [aspectRatio, setAspectRatio] = useState(0.7); // üìê Í∏∞Î≥∏ ÎπÑÏú®



  const categoryColors = {
    Î¨∏Ìïô: '#ffecf1',
    ÏÇ¨ÌöåÍ≥ºÌïô: '#e3f5e1',
    Ïó≠ÏÇ¨: '#fff3e0',
    ÏòàÏà†: '#ede7f6',
    Ï≤†Ìïô: '#f0e5f5',
    Í∏∞Ïà†Í≥ºÌïô: '#e3f2fd',
    Ï¥ùÎ•ò: '#f0f4c3',
    ÏûêÏó∞Í≥ºÌïô: '#e1f5fe',
    Ïñ∏Ïñ¥: '#f9fbe7',
    Ï¢ÖÍµê: '#fbe9e7',
    default: '#ece5e5', // ÎÑê ÎòêÎäî Îß§Ïπ≠ ÏïàÎêòÎäî Í≤ΩÏö∞
  };



  //  Ïù¥ÎØ∏ÏßÄ ÎπÑÏú® ÏûêÎèô Í≥ÑÏÇ∞
  useEffect(() => {
    if (bookImageURL) {
      Image.getSize(
        bookImageURL,
        (w, h) => {
          if (w && h) {
            setAspectRatio(w / h); // Í∞ÄÎ°ú √∑ ÏÑ∏Î°ú
          }
        },
        () => {
          setAspectRatio(0.7); // Ïã§Ìå®Ïãú Í∏∞Î≥∏Í∞í
        }
      );
    }
  }, [bookImageURL]);

  if (!bookInfo) return null;

  const {
    bookname = 'Ï†úÎ™© ÏóÜÏùå',
    authors = 'Ï†ÄÏûê ÎØ∏ÏÉÅ',
    publisher,
    publicationDate,
    bookImageURL,
    mainCategory,
    middleCategory,
    subCategory,
  } = bookInfo;

  const categoryText =
    mainCategory && middleCategory && subCategory
      ? ` #${mainCategory} > ${middleCategory} > ${subCategory}`
      : '  ';

  return (
    <View style={styles.container}>
      {/*  Ï±Ö ÌëúÏßÄ Ïù¥ÎØ∏ÏßÄ Í∞êÏã∏Îäî Î∑∞ Î∞ïÏä§ Ï∂îÍ∞Ä */}
      <View
        style={[
          styles.imageWrapper,
          { backgroundColor: categoryColors[mainCategory] || categoryColors.default }
        ]}
      >

      {bookImageURL ? (
          <Image
            source={{ uri: bookImageURL }}
            style={[styles.image, { aspectRatio }]}
            resizeMode="cover"
          />
        ) : (
          <BookFallbackCover title={bookname} />
        )}
      </View>

      {/*  Ï±Ö Í∏∞Î≥∏ Ï†ïÎ≥¥ ÌÖçÏä§Ìä∏ */}
      <View style={styles.textBlock}>
        <Text style={styles.title}>{bookname}</Text>
        <Text style={styles.author}>{authors}</Text>
        <Text style={styles.publisher}>
          {publisher} / {publicationDate}
        </Text>
        <Text style={styles.category}>{categoryText}</Text>
      </View>
    </View>
  );

};

export default BookInfoHeaderBlock;

const styles = StyleSheet.create({
  container: {
    width: '100%',
    alignItems: 'center',
  },
  imageWrapper: {
    width: '93%',
    borderRadius: fixwidth*0.02,
    overflow: 'hidden',
    backgroundColor: '#e0f3de',
    alignItems: 'center',
    paddingVertical: fixwidth*0.04,
  },

  image: {
    width: '67%',
    borderWidth: fixwidth*0.0017,
    borderColor: '#878787',
    borderRadius:fixwidth*0.0099,
  },
  textBlock: {
    width: '90%',
    paddingVertical: fixwidth * 0.04,
  },
  title: {
    fontSize: fixwidth * 0.05,
    textAlign: 'left',
    fontFamily: 'NotoSansKR-Bold',
    lineHeight: fixwidth * 0.067,
    paddingVertical:fixwidth*0.02

  },
  author: {
    fontSize: fixwidth * 0.037,
    textAlign: 'left',
    fontFamily: 'NotoSansKR-Medium',
    lineHeight: fixwidth * 0.07,
  },
  publisher: {
    fontSize: fixwidth * 0.037,
    color: '#000000',
    textAlign: 'left',
    fontFamily: 'NotoSansKR-Light',
    lineHeight: fixwidth * 0.07,
  },
  category: {
    fontSize: fixwidth * 0.037,
    color: '#6f6f6f',
    textAlign: 'left',
    fontFamily: 'NotoSansKR-Light',
    lineHeight: fixwidth * 0.07,
  },
});
